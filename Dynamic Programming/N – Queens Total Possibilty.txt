N â€“ Queens Problem
-------------------

import java.util.Scanner;

class NQueens {
    static int countSolutions(int n) {
        return solve(0,new boolean[n],new boolean[2 * n],new boolean[2 * n], n);
    }

    static int solve(int row, boolean[]cols, boolean[]diag1, boolean[]diag2,int n) {
        if (row == n) return 1;
        int count = 0;
        
        for (int col = 0; col < n; col++) {
            int d1 = row - col + n;
            int d2 = row + col;
            
            if (cols[col] || diag1[d1] || diag2[d2]) continue;
            
            cols[col] = diag1[d1] = diag2[d2] = true;
            count += solve(row + 1, cols, diag1, diag2, n);
            cols[col] = diag1[d1] = diag2[d2] = false;
        }
        return count;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(countSolutions(n));
    }
}

